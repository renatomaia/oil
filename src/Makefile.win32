# makefile for OiL libraries
# see INSTALL for installation instructions
# see ..\Makefile for further customization

!include ..\config.win32

PRECMP_LUA=	..\lua\precompiler.lua
PRELDR_LUA=	..\lua\preloader.lua

LOOP_PCK= \
	../lua/loop/base.lua \
	../lua/loop/cached.lua \
	../lua/loop/multiple.lua \
	../lua/loop/scoped.lua \
	../lua/loop/simple.lua \
	../lua/loop/table.lua \
	../lua/loop/collection/MapWithArrayOfKeys.lua \
	../lua/loop/collection/ObjectCache.lua \
	../lua/loop/collection/OrderedSet.lua \
	../lua/loop/collection/PriorityQueue.lua \
	../lua/loop/collection/UnorderedArray.lua \
	../lua/loop/collection/UnorderedArraySet.lua \
	../lua/loop/compiler/Arguments.lua \
	../lua/loop/compiler/Conditional.lua \
	../lua/loop/compiler/Expression.lua \
	../lua/loop/component/base.lua \
	../lua/loop/component/contained.lua \
	../lua/loop/component/dynamic.lua \
	../lua/loop/component/intercepted.lua \
	../lua/loop/component/wrapped.lua \
	../lua/loop/debug/Inspector.lua \
	../lua/loop/debug/Matcher.lua \
	../lua/loop/debug/Verbose.lua \
	../lua/loop/debug/Viewer.lua \
	../lua/loop/object/Exception.lua \
	../lua/loop/object/Wrapper.lua \
	../lua/loop/serial/FileStream.lua \
	../lua/loop/serial/Serializer.lua \
	../lua/loop/serial/SocketStream.lua \
	../lua/loop/serial/StringStream.lua \
	../lua/loop/thread/CoSocket.lua \
	../lua/loop/thread/IOScheduler.lua \
	../lua/loop/thread/Scheduler.lua \
	../lua/loop/thread/SocketScheduler.lua \
	../lua/loop/thread/Timer.lua
LUAIDL_PCK= \
	../lua/luaidl/init.lua \
	../lua/luaidl/lex.lua \
	../lua/luaidl/pre.lua \
	../lua/luaidl/sin.lua
OIL_PCK= \
	../lua/oil/assert.lua \
	../lua/oil/component.lua \
	../lua/oil/Exception.lua \
	../lua/oil/init.lua \
	../lua/oil/oo.lua \
	../lua/oil/port.lua \
	../lua/oil/properties.lua \
	../lua/oil/verbose.lua \
	../lua/oil/arch/base.lua \
	../lua/oil/arch/cooperative.lua \
	../lua/oil/arch/corba.lua \
	../lua/oil/arch/ludo.lua \
	../lua/oil/arch/typed.lua \
	../lua/oil/builder/base.lua \
	../lua/oil/builder/cooperative.lua \
	../lua/oil/builder/corba.lua \
	../lua/oil/builder/init.lua \
	../lua/oil/builder/ludo.lua \
	../lua/oil/builder/typed.lua \
	../lua/oil/corba/giop/Codec.lua \
	../lua/oil/corba/giop/Exception.lua \
	../lua/oil/corba/giop/Indexer.lua \
	../lua/oil/corba/giop/init.lua \
	../lua/oil/corba/giop/Listener.lua \
	../lua/oil/corba/giop/Messenger.lua \
	../lua/oil/corba/giop/ProxyOps.lua \
	../lua/oil/corba/giop/Referrer.lua \
	../lua/oil/corba/giop/Requester.lua \
	../lua/oil/corba/giop/ServantOps.lua \
	../lua/oil/corba/idl/Compiler.lua \
	../lua/oil/corba/idl/Importer.lua \
	../lua/oil/corba/idl/Indexer.lua \
	../lua/oil/corba/idl/init.lua \
	../lua/oil/corba/idl/ir.lua \
	../lua/oil/corba/idl/Registry.lua \
	../lua/oil/corba/idl/sysex.lua \
	../lua/oil/corba/iiop/Acceptor.lua \
	../lua/oil/corba/iiop/Connector.lua \
	../lua/oil/corba/iiop/Profiler.lua \
	../lua/oil/corba/interceptors/ClientSide.lua \
	../lua/oil/corba/interceptors/ServerSide.lua \
	../lua/oil/corba/services/event/Dispatcher.lua \
	../lua/oil/corba/services/event/Factory.lua \
	../lua/oil/corba/services/event/init.lua \
	../lua/oil/corba/services/event/Queue.lua \
	../lua/oil/corba/services/event/Reaper.lua \
	../lua/oil/corba/services/naming.lua \
	../lua/oil/kernel/base/Client.lua \
	../lua/oil/kernel/base/Dispatcher.lua \
	../lua/oil/kernel/base/Invoker.lua \
	../lua/oil/kernel/base/Proxies.lua \
	../lua/oil/kernel/base/Receiver.lua \
	../lua/oil/kernel/base/Server.lua \
	../lua/oil/kernel/base/Sockets.lua \
	../lua/oil/kernel/cooperative/Invoker.lua \
	../lua/oil/kernel/cooperative/Mutex.lua \
	../lua/oil/kernel/cooperative/Receiver.lua \
	../lua/oil/kernel/typed/Client.lua \
	../lua/oil/kernel/typed/Dispatcher.lua \
	../lua/oil/kernel/typed/Proxies.lua \
	../lua/oil/kernel/typed/Server.lua \
	../lua/oil/ludo/Codec.lua \
	../lua/oil/ludo/Listener.lua \
	../lua/oil/ludo/Referrer.lua \
	../lua/oil/ludo/Requester.lua

OILBIT_INC=	oilbit.h
OILBIT_OBJ=	oilbit.obj
OILBIT_LIB=	oilbit.lib
OILBIT_EXT=	oilbit.dll oilbit.exp

PRECMP_INC=	loop.h luaidl.h oil.h
PRECMP_SRC=	loop.c luaidl.c oil.c
PRECMP_OBJ=	loop.obj luaidl.obj oil.obj
PRECMP_LIB=	loop.lib luaidl.lib oil.lib
PRECMP_EXT=	loop.dll luaidl.dll oil.dll \
          	loop.exp luaidl.exp oil.exp

PRELDR_INC=	oilall.h
PRELDR_SRC=	oilall.c
PRELDR_OBJ=	oilall.obj
PRELDR_LIB=	oilall.lib
PRELDR_EXT=	oilall.dll oilall.exp

OILBIN_OBJ=	console.obj
OILBIN_TRG=	console.exe

ALL_PRE=	$(PRECMP_INC) $(PRECMP_SRC) $(PRECMP_LIB) $(PRELDR_INC) $(PRELDR_SRC) $(PRELDR_LIB) $(OILBIN_TRG)
ALL_OBJ=	$(OILBIT_OBJ) $(PRECMP_OBJ) $(PRELDR_OBJ) $(OILBIN_OBJ)
ALL_TRG=	$(OILBIT_LIB)
ALL_LIB=	$(OILBIT_LIB)
ALL_EXT=	$(OILBIT_EXT) $(PRECMP_EXT) $(PRELDR_EXT)

all:	$(ALL_TRG) bundles preload

obj:	$(ALL_OBJ)

lib:	$(ALL_LIB)

loop.c loop.h: $(PRECMP_LUA) $(LOOP_PCK)
	$(LUA) $(PRECMP_LUA) $(PC_FLAGS) -o loop $(LOOP_PCK)

luaidl.c luaidl.h: $(PRECMP_LUA) $(LUAIDL_PCK)
	$(LUA) $(PRECMP_LUA) $(PC_FLAGS) -o luaidl $(LUAIDL_PCK)

oil.c oil.h: $(PRECMP_LUA) $(OIL_PCK)
	$(LUA) $(PRECMP_LUA) $(PC_FLAGS) -o oil $(OIL_PCK)

oilall.c oilall.h: $(PRELDR_LUA) $(PRECMP_INC) $(OILBIT_INC)
	$(LUA) $(PRELDR_LUA) $(PLD_FLAGS) -o oilall $(PRECMP_INC) $(OILBIT_INC)

$(OILBIT_LIB): $(OILBIT_OBJ)
	$(LINK) /$(LBT) $(LDFLAGS) /out:oilbit.$(LBT) $(OILBIT_OBJ) $(LIBS)

$(PRELDR_LIB): $(OILBIT_OBJ) $(PRECMP_OBJ) $(PRELDR_OBJ)
	$(LINK) /$(LBT) $(LDFLAGS) /out:oilall.$(LBT) $(OILBIT_OBJ) $(PRECMP_OBJ) $(PRELDR_OBJ) $(LIBS)

$(OILBIN_TRG): $(OILBIN_OBJ) $(PRELDR_LIB)
	$(LINK) $(LDFLAGS) /out:$@ $(OILBIN_OBJ) $(PRELDR_LIB) $(LIBS)

bundles: $(OILBIT_OBJ) $(PRECMP_OBJ)
	$(LINK) /$(LBT) $(LDFLAGS) /out:loop.$(LBT)             loop.obj $(LIBS)
	$(LINK) /$(LBT) $(LDFLAGS) /out:luaidl.$(LBT)         luaidl.obj $(LIBS)
	$(LINK) /$(LBT) $(LDFLAGS) /out:oil.$(LBT) $(OILBIT_OBJ) oil.obj $(LIBS)

preload: $(PRELDR_LIB)

console: $(OILBIN_TRG)

clean:
	$(RM) $(ALL_TRG) $(ALL_OBJ) $(ALL_EXT) $(ALL_PRE)

echo:
	@echo CC = $(CC)
	@echo LINK = $(LINK)
	@echo CFLAGS = $(CFLAGS)
	@echo LDFLAGS = $(LDFLAGS)
	@echo RM = $(RM)
	@echo MYCFLAGS = $(MYCFLAGS)
	@echo MYLDFLAGS = $(MYLDFLAGS)
	@echo MYLIBS = $(MYLIBS)

# convenience targets for usual platforms

none:
	@echo "Please choose a platform: $(PLATS)"

libs: all

dlls:
	$(MAKE) all LBT=dll LIBS="$(MYLIBS)" MYCFLAGS="/DOIL_API=__declspec(dllexport)"

# DO NOT DELETE

loop.obj: loop.c loop.h
luaidl.obj: luaidl.c luaidl.h
oilbit.obj: oilbit.c oilbit.h
oil.obj: oil.c oil.h
oilall.obj: $(PRECMP_INC) $(PRELDR_INC)
console.obj: $(PRELDR_INC) console-5.1.c console-5.0.2.c
